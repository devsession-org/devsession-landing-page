<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.0/gsap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.0/MotionPathPlugin.min.js"></script>
<svg width="600" height="450" viewBox="0 0 158.75 119.0625" version="1.1" class="above-fold-animation" xmlns="http://www.w3.org/2000/svg">
  <g class="layer2" style="display:inline">
    <path style="fill:#233223;fill-opacity:1;stroke-width:1.22641;stop-color:#000" class="rect2300" d="M0 0h158.75v119.063H0z"/>
  </g>
  <g class="layer3" style="display:inline">
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-1" d="M51.933 40.984h26.025v1.413H51.933z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.495679;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-2" d="M51.933 46.007h52.134v1.414H51.933z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-3" d="M57.364 51.031H83.39v1.413H57.364z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-4" d="M57.364 56.054H83.39v1.413H57.364z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-5" d="M51.933 61.077h26.025v1.414H51.933z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-6" d="M57.236 66.101h26.026v1.413H57.236z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.466585;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-7" d="M57.236 71.124h46.194v1.413H57.236z"/>
    <path style="fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.466047;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="code-line-8" d="M57.236 76.147h46.088v1.414H57.236z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="added-code-line-1" d="M51.933 40.984h26.025v1.413H51.933z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.495679;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-2" d="M51.933 46.007h52.134v1.414H51.933z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-3" d="M57.364 51.031H83.39v1.413H57.364z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-4" d="M57.364 56.054H83.39v1.413H57.364z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-5" d="M51.933 61.077h26.025v1.414H51.933z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.350217;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-6" d="M57.236 66.101h26.026v1.413H57.236z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.466585;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-7" d="M57.236 71.124h46.194v1.413H57.236z"/>
    <path style="display:inline;fill:#7a7a87;fill-opacity:1;stroke:none;stroke-width:.466047;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000;opacity:0" class="added-code-line-8" d="M57.236 76.147h46.088v1.414H57.236z"/>
    <path style="display:inline;opacity:1;fill:#233223;fill-opacity:1;stroke:none;stroke-width:1.05833;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:3.2;stroke-opacity:1;stop-color:#000" class="rect249015" d="M45.886 78.602h67.191v40.39H45.886z"/>
  </g>
  <g class="layer1" style="display:inline">
    <path
       class="orbit"
       style="opacity:1;fill:none;stroke:#787886;stroke-width:1.04589;stop-color:#000000;stroke-opacity:1"
       d="M 146.26009,59.53125 A 66.885115,46.288243 0 0 1 79.374985,105.81949 66.885115,46.288243 0 0 1 12.489869,59.53125 66.885115,46.288243 0 0 1 79.374985,13.243007 66.885115,46.288243 0 0 1 146.26009,59.53125 Z" />
    <path style="fill:none;stroke:#7a7a87;stroke-width:1.88443;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="rect1379" d="M46.453 35.021h65.844v49.02H46.453z"/>
    <path style="fill:#5eff71;fill-opacity:1;stroke:#233223;stroke-width:.475085;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="green-cursor" d="M78.145 39.184h2.71v5.013h-2.71z"/>
    <path style="fill:#ff5eff;fill-opacity:1;stroke:#233223;stroke-width:.475085;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="purple-cursor" d="M69.865 54.254h2.71v5.013h-2.71z"/>
    <path style="fill:#5efcff;fill-opacity:1;stroke:#233223;stroke-width:.475085;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="cyan-cursor" d="M57.45 64.3h2.71v5.014h-2.71z"/>
    <path style="fill:#fff85e;fill-opacity:1;stroke:#233223;stroke-width:.475085;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="yellow-cursor" d="M98.749 74.347h2.71v5.014h-2.71z"/>
    <g class="sublime-orb">
      <circle style="fill:#233223;fill-opacity:1;stroke:none;stroke-width:.930307;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="path3178-10-13-6-6-8-1-9" r="11.919565" cy="95.094032" cx="30.999062"/>
      <path class="sublime-orbit" style="fill:#233223;stroke-width:.804963;stop-color:#000;fill-opacity:1" d="M41.11 95.094A10.112 10.52 0 0 1 31 105.614a10.112 10.52 0 0 1-10.113-10.52A10.112 10.52 0 0 1 31 84.574a10.112 10.52 0 0 1 10.112 10.52Z"/>
      <path class="path190947-9-0-7-1-2-5-0" style="fill:#5efcff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1.04596;stroke-dashoffset:3.2;stop-color:#000" d="m40.692 92.45.007-.002a10.155 10.155 0 0 0-3.465-5.548 10.192 10.192 0 0 0-6.323-2.306 10.324 10.324 0 0 0-4.034.76 10.456 10.456 0 0 0-5.617 5.472 10.449 10.449 0 0 0-.878 4.069v.007a.414.172 67.547 0 0 .448.448v.055l-.502-.503a10.576 10.576 0 0 0 2.945 7.405 10.635 10.635 0 0 0 7.638 3.288 10.694 10.694 0 0 0 4.73-1.04 10.8 10.8 0 0 0 5.652-6.665c.162-.497.289-1.011.378-1.54l-.767-.103-.767-.102a9.327 9.327 0 0 1-.227 1.348 9.355 9.355 0 0 1-1.813 3.453 9.439 9.439 0 0 1-3.043 2.415 9.385 9.385 0 0 1-4.143 1.012 9.461 9.461 0 0 1-6.839-2.841 9.524 9.524 0 0 1-2.74-6.63.464.191 67.397 0 0-.502-.502v.055a.414.171 67.449 0 0 .448.447v-.006a9.649 9.649 0 0 1 .706-3.764 9.781 9.781 0 0 1 5.113-5.258 9.773 9.773 0 0 1 3.814-.825 9.882 9.882 0 0 1 6.178 2.035 10.015 10.015 0 0 1 3.597 5.368z"/>
      <circle style="fill:#5efcff;fill-opacity:1;stroke:#233223;stroke-width:1.05833;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="sublime-satellite" cx="41.342361" cy="95.114799" r="2.5302656"/>
      <text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.43785px;line-height:1.25;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0;word-spacing:0;writing-mode:lr-tb;fill:#fff;fill-opacity:1;stroke-width:.208024" x="22.70215" y="96.745384" class="text99083"><tspan class="tspan99081" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.43785px;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#fff;fill-opacity:1;stroke-width:.208024" x="22.70215" y="96.745384">Sublime</tspan></text>
    </g>
    <g class="vim-orb">
      <circle style="fill:#233223;fill-opacity:1;stroke:none;stroke-width:.930307;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="path3178-10-13-6-6-8-1" r="11.919565" cy="95.114799" cx="-127.18039" transform="scale(-1 1)"/>
      <path class="vim-orbit" style="fill:#233223;fill-opacity:1;stroke-width:.811077;stop-color:#000" d="M117.359 95.084a10.284 10.5 0 0 0 10.284 10.5 10.284 10.5 0 0 0 10.285-10.5 10.284 10.5 0 0 0-10.285-10.5 10.284 10.5 0 0 0-10.284 10.5Z"/>
      <path class="path190947-9-0-7-1-2-5" style="fill:#fff85e;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1.04596;stroke-dashoffset:3.2;stop-color:#000" d="m117.547 92.45.007.002a10.015 10.015 0 0 1 3.597-5.368 9.882 9.882 0 0 1 6.178-2.035 9.763 9.763 0 0 1 3.814.825 9.78 9.78 0 0 1 5.113 5.257 9.649 9.649 0 0 1 .706 3.764v.007a.414.172 67.546 0 0 .448.448v.055l-.502-.503a9.524 9.524 0 0 1-2.74 6.63 9.46 9.46 0 0 1-6.839 2.841 9.385 9.385 0 0 1-4.143-1.013 9.439 9.439 0 0 1-3.043-2.414 9.355 9.355 0 0 1-1.813-3.453 9.328 9.328 0 0 1-.227-1.348l-.767.102-.767.103c.09.529.216 1.043.378 1.54a10.8 10.8 0 0 0 5.653 6.665 10.694 10.694 0 0 0 4.729 1.04 10.634 10.634 0 0 0 7.638-3.288 10.577 10.577 0 0 0 2.945-7.404.464.192 67.412 0 0-.502-.503v.054a.414.171 67.458 0 0 .448.448v-.007a10.449 10.449 0 0 0-.878-4.07 10.456 10.456 0 0 0-5.617-5.472 10.324 10.324 0 0 0-4.034-.76 10.192 10.192 0 0 0-6.323 2.307 10.155 10.155 0 0 0-3.465 5.548z"/>
      <circle style="fill:#fff85e;fill-opacity:1;stroke:#233223;stroke-width:1.05833;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="vim-satellite" cx="-116.89714" cy="95.114799" r="2.5302656" transform="scale(-1 1)"/>
      <text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.46698px;line-height:1.25;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0;word-spacing:0;writing-mode:lr-tb;fill:#fff;fill-opacity:1;stroke-width:.209389" x="123.38319" y="96.756416" class="text99083-3"><tspan class="tspan99081-56" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.46698px;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#fff;fill-opacity:1;stroke-width:.209389" x="123.38319" y="96.756416">VIM</tspan></text>
    </g>
    <path style="fill:#233223;fill-opacity:1;stroke:none;stroke-width:.728671;stroke-miterlimit:4;stroke-dasharray:1.45734,1.45734;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="rect125833" d="M71.614 31.848h15.522v5.799H71.614z"/>
    <text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:5.64444px;line-height:1.25;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0;word-spacing:0;writing-mode:lr-tb;fill:#fff;fill-opacity:1;stroke-width:.264583" x="73.727737" y="36.821674" class="text121535"><tspan class="tspan121533" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:5.64444px;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#fff;fill-opacity:1;stroke-width:.264583" x="73.727737" y="36.821674">Code</tspan></text>
    <g class="vscode-orb">
      <path class="vscode-outer-orbit-1" style="fill:#233223;fill-opacity:1;stroke-width:.930307;stop-color:#000" d="M44.028 25.75a11.92 11.92 0 0 1-11.92 11.92A11.92 11.92 0 0 1 20.19 25.75a11.92 11.92 0 0 1 11.92-11.92 11.92 11.92 0 0 1 11.92 11.92Z"/>
      <path class="vscode-outer-orbit" style="fill:#233223;fill-opacity:1;stroke-width:.818515;stop-color:#000" d="M43.09 25.84a10.42 10.554 0 0 1-10.42 10.555 10.42 10.554 0 0 1-10.421-10.554 10.42 10.554 0 0 1 10.42-10.555 10.42 10.554 0 0 1 10.42 10.555Z"/>
      <text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.46698px;line-height:1.25;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0;word-spacing:0;writing-mode:lr-tb;fill:#fff;fill-opacity:1;stroke-width:.209389" x="25.884283" y="27.391294" class="text99083-5-4"><tspan class="tspan99081-9-9" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.46698px;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#fff;fill-opacity:1;stroke-width:.209389" x="25.884283" y="27.391294">VSCode</tspan></text>
      <path class="vscode-orbit" style="fill:#ff5eff;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1.04596;stroke-dashoffset:3.2;stop-color:#000" d="m22.787 23.183.007.002a10.015 10.015 0 0 1 3.596-5.368 9.882 9.882 0 0 1 6.178-2.035 9.76 9.76 0 0 1 3.814.825 9.781 9.781 0 0 1 5.113 5.258 9.649 9.649 0 0 1 .706 3.77.414.172 67.546 0 0 .448.449v.054l-.502-.502a9.524 9.524 0 0 1-2.74 6.63 9.46 9.46 0 0 1-6.839 2.841 9.385 9.385 0 0 1-4.143-1.013 9.439 9.439 0 0 1-3.043-2.415 9.354 9.354 0 0 1-1.813-3.453 9.327 9.327 0 0 1-.226-1.347l-.768.102-.767.102c.09.53.216 1.044.378 1.54a10.8 10.8 0 0 0 5.653 6.665 10.694 10.694 0 0 0 4.729 1.04A10.636 10.636 0 0 0 43.15 25.636a.464.192 67.412 0 0-.502-.502v.054a.414.171 67.458 0 0 .448.448v-.008a10.449 10.449 0 0 0-.878-4.07 10.456 10.456 0 0 0-5.617-5.471 10.324 10.324 0 0 0-4.034-.76 10.192 10.192 0 0 0-6.323 2.307 10.155 10.155 0 0 0-3.465 5.548z"/>
      <circle style="fill:#ff5eff;fill-opacity:1;stroke:#233223;stroke-width:1.05833;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="vscode-satellite" cx="22.572432" cy="25.74968" r="2.5302656"/>
    </g>
    <g class="intellij-orb">
      <text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.46698px;line-height:1.25;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0;word-spacing:0;writing-mode:lr-tb;fill:#fff;fill-opacity:1;stroke-width:.209389" x="119.48381" y="27.80002" class="text99083-5-4-9"><tspan class="tspan99081-9-9-6" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:4.46698px;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#fff;fill-opacity:1;stroke-width:.209389" x="119.48381" y="27.80002">VSCode</tspan></text>
      <circle style="fill:#233223;fill-opacity:1;stroke:none;stroke-width:.930307;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;stop-color:#000" class="path3178-10-13-6-6-8" r="11.919565" cy="25.74968" cx="125.75727"/>
      <path class="intellij-orbit" style="fill:#233223;fill-opacity:1;stroke-width:.810281;stop-color:#000" d="M135.433 25.794a10.219 10.547 0 0 1-10.218 10.547 10.219 10.547 0 0 1-10.219-10.547 10.219 10.547 0 0 1 10.219-10.547 10.219 10.547 0 0 1 10.218 10.547Z"/>
      <text xml:space="preserve" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:3.72177px;line-height:1.25;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;letter-spacing:0;word-spacing:0;writing-mode:lr-tb;fill:#fff;fill-opacity:1;stroke-width:.174457" x="117.86526" y="26.776888" class="text99083-1"><tspan class="tspan99081-5" style="font-style:normal;font-variant:normal;font-weight:700;font-stretch:normal;font-size:3.72177px;font-family:'Iosevka Term';-inkscape-font-specification:'Iosevka Term, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#fff;fill-opacity:1;stroke-width:.174457" x="117.86526" y="26.776888">Intellij</tspan></text>
      <path class="path190947-9-0-7-1-2" style="fill:#5eff71;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:1.04596;stroke-dashoffset:3.2;stop-color:#000" d="m135.39 23.085.007-.002a10.155 10.155 0 0 0-3.464-5.548 10.192 10.192 0 0 0-6.323-2.306 10.324 10.324 0 0 0-4.034.76 10.456 10.456 0 0 0-5.617 5.472 10.449 10.449 0 0 0-.878 4.069v.007l.448-.448v-.054l-.503.502a10.578 10.578 0 0 0 2.946 7.405 10.635 10.635 0 0 0 7.638 3.288 10.694 10.694 0 0 0 4.73-1.04 10.8 10.8 0 0 0 5.652-6.665 10.82 10.82 0 0 0 .377-1.54l-.767-.103-.767-.102a9.329 9.329 0 0 1-.226 1.348 9.355 9.355 0 0 1-1.813 3.453 9.439 9.439 0 0 1-3.043 2.414 9.385 9.385 0 0 1-4.143 1.013 9.461 9.461 0 0 1-6.839-2.841 9.524 9.524 0 0 1-2.74-6.63l-.502.503v-.055a.172.414 22.454 0 0 .448-.448v-.007a9.649 9.649 0 0 1 .706-3.764 9.781 9.781 0 0 1 5.113-5.258 9.773 9.773 0 0 1 3.814-.824 9.882 9.882 0 0 1 6.178 2.035 10.015 10.015 0 0 1 3.596 5.368z"/>
      <circle style="fill:#5eff71;fill-opacity:1;stroke:#233223;stroke-width:1.05833;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;stop-color:#000" class="intellij-satellite" cx="136.04053" cy="25.74968" r="2.5302656"/>
    </g>
  </g>
</svg>
<script>
aboveFoldAnimation();
function aboveFoldAnimation() {
  gsap.registerPlugin(MotionPathPlugin);
  const sublimeOrb = ".above-fold-animation .sublime-orb";
  const vscodeOrb = ".above-fold-animation .vscode-orb";
  const intellijOrb = ".above-fold-animation .intellij-orb";
  const vimOrb = ".above-fold-animation .vim-orb";

  const vscodeOrbit = ".above-fold-animation .vscode-outer-orbit";
  const vscodeSatellite = ".above-fold-animation .vscode-satellite";

  const intellijOrbit = ".above-fold-animation .intellij-orbit";
  const intellijSatellite = ".above-fold-animation .intellij-satellite";

  const vimOrbit = ".above-fold-animation .vim-orbit";
  const vimSatellite = ".above-fold-animation .vim-satellite";

  const sublimeOrbit = ".above-fold-animation .sublime-orbit";
  const sublimeSatellite = ".above-fold-animation .sublime-satellite";

  const greenCursor = ".above-fold-animation .green-cursor";
  const purpleCursor = ".above-fold-animation .purple-cursor";
  const cyanCursor = ".above-fold-animation .cyan-cursor";
  const yellowCursor = ".above-fold-animation .yellow-cursor";

  const line1 = ".above-fold-animation .code-line-1";
  const line2 = ".above-fold-animation .code-line-2";
  const line3 = ".above-fold-animation .code-line-3";
  const line4 = ".above-fold-animation .code-line-4";
  const line5 = ".above-fold-animation .code-line-5";
  const line6 = ".above-fold-animation .code-line-6";
  const line7 = ".above-fold-animation .code-line-7";
  const line8 = ".above-fold-animation .code-line-8";

  const addedLine1 = ".above-fold-animation .added-code-line-1";
  const addedLine2 = ".above-fold-animation .added-code-line-2";
  const addedLine3 = ".above-fold-animation .added-code-line-3";
  const addedLine4 = ".above-fold-animation .added-code-line-4";
  const addedLine5 = ".above-fold-animation .added-code-line-5";
  const addedLine6 = ".above-fold-animation .added-code-line-6";
  const addedLine7 = ".above-fold-animation .added-code-line-7";
  const addedLine8 = ".above-fold-animation .added-code-line-8";


  animateOrbs();
  const mainTimeline = gsap.timeline({repeat: "-1"})
       .add(typingSecond0(), 0)
       .add(typingSecond1(), 1)
       .add(typingSecond2(), 2)
       .add(typingSecond3(), 3)
       .add(typingSecond4(), 4)
       .add(typingSecond5(), 5)
       .add(typingSecond6(), 6)
       .add(typingSecond7(), 7)
       .add(typingSecond8(), 8)
       .add(typingSecond9(), 9)

function typingSecond0() {
  var tl = gsap.timeline();
  // setup
  changeManyElements(tl, [addedLine1, addedLine2, addedLine3, addedLine4, addedLine5, addedLine6, addedLine7, addedLine8], {opacity: 0, duration: 0}, 0);

  // yellow
  moveCursor(tl, yellowCursor, {y: "-=15", x: "-=21", ease: "power1.inOut", duration: 0.5}, 0);
  typeInLine(tl, yellowCursor, line5, 0.2, ">");
  typeInLine(tl, yellowCursor, line5, 0.2, ">");
  typeInLine(tl, yellowCursor, line5, 0.1, ">");

  // green
  cursorBackspace(tl, greenCursor, line1, 0.2, 0);
  cursorBackspace(tl, greenCursor, line1, 0.3, ">");
  cursorBackspace(tl, greenCursor, line1, 0.1, ">");
  cursorBackspace(tl, greenCursor, line1, 0.1, ">");
  cursorBackspace(tl, greenCursor, line1, 0.3, ">");

  // purple
  cursorBackspace(tl, purpleCursor, line4, 0.3, 0);
  cursorBackspace(tl, purpleCursor, line4, 0.1, ">");
  cursorBackspace(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  tabInLine(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");

  // cyan
  typeInLine(tl, cyanCursor, line6, 0.3, 0);
  typeInLine(tl, cyanCursor, line6, 0.3, ">");
  moveCursor(tl, cyanCursor, {x: "+=26", ease: "power1.inOut", duration: 0.4}, ">");

  return tl;
}

function typingSecond1() {
  var tl = gsap.timeline();

  // yellow
  typeInLine(tl, yellowCursor, line5, 0.1, 0);
  typeInLine(tl, yellowCursor, line5, 0.2, ">");
  typeInLine(tl, yellowCursor, line5, 0.4, ">");
  typeInLine(tl, yellowCursor, line5, 0.2, ">");
  typeInLine(tl, yellowCursor, line5, 0.1, ">");
  
  // green
  moveCursor(tl, greenCursor, {y: "+=5", x: "-=16.5"}, 0);
  changeElement(tl, addedLine2, {opacity: 1, scaleX: 0, duration: 0}, 0);
  moveElementsDown(tl, [line2, line3, line4, line5, line6, line7, line8, purpleCursor, cyanCursor, yellowCursor], 0); // 0.5 seconds
  typeInLine(tl, greenCursor, addedLine2, 0.2, ">", {scale: 0.05});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.05});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.05});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.05});

  // purple
  cursorBackspace(tl, purpleCursor, line4, 0.3, 0);
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  tabInLine(tl, purpleCursor, line4, 0.1, ">");
  cursorBackspace(tl, purpleCursor, line4, 0.1, ">");
  cursorBackspace(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  typeInLine(tl, purpleCursor, line4, 0.1, ">");
  
  // cyan
  typeInLine(tl, cyanCursor, line6, 0.2, 0);
  typeInLine(tl, cyanCursor, line6, 0.2, ">");
  tabInLine(tl, cyanCursor, line6, 0.2, ">");
  cursorBackspace(tl, cyanCursor, line6, 0.2, ">");
  tabInLine(tl, cyanCursor, line6, 0.2, ">");

  return tl;
}

function typingSecond2() {
  var tl = gsap.timeline();

  // yellow
  cursorBackspace(tl, yellowCursor, line5, 0.2, 0);
  cursorBackspace(tl, yellowCursor, line5, 0.1, ">");
  cursorBackspace(tl, yellowCursor, line5, 0.1, ">");
  typeInLine(tl, yellowCursor, line5, 0.3, ">");
  typeInLine(tl, yellowCursor, line5, 0.2, ">");
  typeInLine(tl, yellowCursor, line5, 0.1, ">");
  
  // green
  typeInLine(tl, greenCursor, addedLine2, 0.1, 0, {scale: 0.03});
  typeInLine(tl, greenCursor, addedLine2, 0.2, ">", {scale: 0.03});
  cursorBackspace(tl, greenCursor, addedLine2, 0.3, ">", {scale: 0.03});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.03});
  typeInLine(tl, greenCursor, addedLine2, 0.2, ">", {scale: 0.03});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.03});

  // purple
  moveCursor(tl, purpleCursor, {y: "-=5", x: "-=3", ease: "power1.inOut", duration: 0.5}, 0);
  cursorBackspace(tl, purpleCursor, line3, 0.2, ">", {scale: 0.05});
  cursorBackspace(tl, purpleCursor, line3, 0.2, ">", {scale: 0.05});
  cursorBackspace(tl, purpleCursor, line3, 0.1, ">", {scale: 0.05});

  // cyan
  cursorBackspace(tl, cyanCursor, line6, 0.2, 0);
  cursorBackspace(tl, cyanCursor, line6, 0.2, ">");
  moveCursor(tl, cyanCursor, {y: "-=30", x: "-=30", ease: "power1.inOut", duration: 0.5}, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.2, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.2, ">");

  return tl;
}

function typingSecond3() {
  var tl = gsap.timeline();

  // yellow
  moveCursor(tl, yellowCursor, {x: "-=21", ease: "power1.inOut", duration: 0.5}, 0);
  cursorBackspace(tl, yellowCursor, line5, 0.1, ">");
  cursorBackspace(tl, yellowCursor, line5, 0.1, ">");
  cursorBackspace(tl, yellowCursor, line5, 0.2, ">");
  cursorBackspace(tl, yellowCursor, line5, 0.1, ">");
  
  // green
  typeInLine(tl, greenCursor, addedLine2, 0.1, 0, {scale: 0.04});
  tabInLine(tl, greenCursor, addedLine2, 0.2, ">", {scale: 0.04});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.04});
  tabInLine(tl, greenCursor, addedLine2, 0.2, ">", {scale: 0.04});
  typeInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.04});
  tabInLine(tl, greenCursor, addedLine2, 0.1, ">", {scale: 0.04});
  typeInLine(tl, greenCursor, addedLine2, 0.2, ">", {scale: 0.04});

  // purple
  typeInLine(tl, purpleCursor, line3, 0.2, 0, {scale: 0.05});
  tabInLine(tl, purpleCursor, line3, 0.2, ">", {scale: 0.05});
  typeInLine(tl, purpleCursor, line3, 0.1, ">", {scale: 0.05});
  moveCursor(tl, purpleCursor, {y: "+=5", x: "-=29.5", duration: 0.5}, ">");
  moveElementsDown(tl, [line4, line5, line6, line7, line8, yellowCursor], "<"); // 0.5 seconds

  // cyan
  typeInLine(tl, cyanCursor, line1, 0.2, 0);
  typeInLine(tl, cyanCursor, line1, 0.3, ">");
  typeInLine(tl, cyanCursor, line1, 0.1, ">");
  tabInLine(tl, cyanCursor, line1, 0.1, ">");
  typeInLine(tl, cyanCursor, line1, 0.3, ">");

  return tl;
}

function typingSecond4() {
  var tl = gsap.timeline();

  // yellow
  typeInLine(tl, yellowCursor, line5, 0.1, 0, {scale: 0.08});
  tabInLine(tl, yellowCursor, line5, 0.2, ">", {scale: 0.08});
  moveCursor(tl, yellowCursor, {y: "-=29.5", x: "+=11", duration: 0.3, ease: "power1.inOut"}, ">");
  cursorBackspace(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  cursorBackspace(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  cursorBackspace(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  typeInLine(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  
  // green
  moveCursor(tl, greenCursor, {y: "+=5", x: "-=37"}, 0);
  changeElement(tl, addedLine3, {opacity: 1, scaleX: 0, duration: 0}, 0);
  moveElementsDown(tl, [line2, line3, line4, line5, line6, line7, line8, purpleCursor, yellowCursor], 0); // 0.5 seconds
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.07});
  tabInLine(tl, greenCursor, addedLine3, 0.2, ">", {scale: 0.07});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.07});
  tabInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.07});

  // purple
  changeElement(tl, addedLine5, {opacity: 1, scaleX: 0, y: "+=5", duration: 0}, 0);
  moveCursor(tl, purpleCursor, {x: "-=5", ease: "power1.inOut"}, 0);
  typeInLine(tl, purpleCursor, addedLine5, 0.1, ">");
  typeInLine(tl, purpleCursor, addedLine5, 0.1, ">");
  typeInLine(tl, purpleCursor, addedLine5, 0.1, ">");
  typeInLine(tl, purpleCursor, addedLine5, 0.1, ">");

  // cyan
  cursorBackspace(tl, cyanCursor, line1, 0.2, 0);
  cursorBackspace(tl, cyanCursor, line1, 0.3, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.3, ">");
  tabInLine(tl, cyanCursor, line1, 0.1, ">");
  typeInLine(tl, cyanCursor, line1, 0.1, ">");

  return tl;
}

function typingSecond5() {
  var tl = gsap.timeline();

  // yellow
  typeInLine(tl, yellowCursor, addedLine2, 0.2, 0, {scale: "0.04"});
  typeInLine(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  tabInLine(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  typeInLine(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  cursorBackspace(tl, yellowCursor, addedLine2, 0.2, ">", {scale: "0.04"});
  cursorBackspace(tl, yellowCursor, addedLine2, 0.1, ">", {scale: "0.04"});
  tabInLine(tl, yellowCursor, addedLine2, 0.2, ">", {scale: "0.04"});
  
  // green
  moveCursor(tl, greenCursor, {y: "+=10", x: "-=15.5", duration: 0.5, ease: "power1.inOut"}, 0);
  changeElement(tl, line3, {opacity: 0, duration: 0.5}, ">");
  moveElementsUp(tl, [line4, line5, line6, line7, line8, cyanCursor, purpleCursor, addedLine5], "<"); // 0.5 seconds

  // purple
  typeInLine(tl, purpleCursor, addedLine5, 0.2, 0);
  typeInLine(tl, purpleCursor, addedLine5, 0.1, ">");
  tabInLine(tl, purpleCursor, addedLine5, 0.3, ">");
  typeInLine(tl, purpleCursor, addedLine5, 0.2, ">");
  cursorBackspace(tl, purpleCursor, addedLine5, 0.2, ">");

  // cyan
  moveCursor(tl, cyanCursor, {y: "+=30", x: "-=2", ease: "power1.inOut", duration: 0.5}, 0);
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");

  return tl;
}

function typingSecond6() {
  var tl = gsap.timeline();

  // yellow
  moveCursor(tl, yellowCursor, {y: "+=25.1", x: "-=11", duration: 0.5, ease: "power1.inOut"}, 0);
  changeElement(tl, yellowCursor, {y: "+=5", x: "-=25.3", duration: 0.5}, ">");
  moveElementsDown(tl, [line7], "<"); // 0.5 seconds
  changeElement(tl, addedLine8, {opacity: 1, scaleX: 0, duration: 0}, "<");
  
  // green
  moveCursor(tl, greenCursor, {y: "-=5", x: "+=17", duration: 0.5, ease: "power1.inOut"}, 0);
  cursorBackspace(tl, greenCursor, line2, 0.1, ">", {scale: "0.04"});
  cursorBackspace(tl, greenCursor, line2, 0.1, ">", {scale: "0.04"});
  typeInLine(tl, greenCursor, line2, 0.2, ">", {scale: "0.04"});
  tabInLine(tl, greenCursor, line2, 0.1, ">", {scale: "0.04"});

  // purple
  tabInLine(tl, purpleCursor, addedLine5, 0.2, 0);
  typeInLine(tl, purpleCursor, addedLine5, 0.3, ">");
  typeInLine(tl, purpleCursor, addedLine5, 0.3, ">");
  typeInLine(tl, purpleCursor, addedLine5, 0.2, ">");

  // cyan
  moveCursor(tl, cyanCursor, {y: "-=25", x: "-=2", ease: "power1.inOut", duration: 0.5}, 0);
  cursorBackspace(tl, cyanCursor, line1, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line1, 0.1, ">");

  return tl;
}

function typingSecond7() {
  var tl = gsap.timeline();

  // yellow
  typeInLine(tl, yellowCursor, line6, 0.1, 0);
  typeInLine(tl, yellowCursor, line6, 0.2, ">", {scale: 0.05});
  typeInLine(tl, yellowCursor, line6, 0.4, ">", {scale: 0.05});
  typeInLine(tl, yellowCursor, line6, 0.2, ">", {scale: 0.05});
  typeInLine(tl, yellowCursor, line6, 0.1, ">", {scale: 0.05});

  // green
  moveCursor(tl, greenCursor, {y: "-=5", x: "-=7", duration: 0.5, ease: "power1.inOut"}, 0);
  typeInLine(tl, greenCursor, addedLine3, 0.2, ">", {scale: "0.08"});
  tabInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: "0.08"});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: "0.08"});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: "0.08"});

  // purple
  moveCursor(tl, purpleCursor, {y: "-=15", x: "-=7", duration: 0.5, ease: "power1.inOut"}, 0);
  cursorBackspace(tl, purpleCursor, addedLine2, 0.2, ">");
  cursorBackspace(tl, purpleCursor, addedLine2, 0.1, ">");
  cursorBackspace(tl, purpleCursor, addedLine2, 0.2, ">");

  // cyan
  typeInLine(tl, cyanCursor, line1, 0.1, 0);
  typeInLine(tl, cyanCursor, line1, 0.3, ">");
  typeInLine(tl, cyanCursor, line1, 0.1, ">");
  tabInLine(tl, cyanCursor, line1, 0.3, ">");
  typeInLine(tl, cyanCursor, line1, 0.1, ">");

  return tl;
}

function typingSecond8() {
  var tl = gsap.timeline();

  // yellow
  tabInLine(tl, yellowCursor, addedLine8, 0.1, 0, {scale: 0.04});
  typeInLine(tl, yellowCursor, addedLine8, 0.2, ">", {scale: 0.04});
  typeInLine(tl, yellowCursor, addedLine8, 0.3, ">", {scale: 0.04});
  typeInLine(tl, yellowCursor, addedLine8, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, yellowCursor, addedLine8, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, yellowCursor, addedLine8, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, yellowCursor, addedLine8, 0.1, ">", {scale: 0.04});

  // green
  typeInLine(tl, greenCursor, addedLine3, 0.2, 0, {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  cursorBackspace(tl, greenCursor, addedLine3, 0.4, ">", {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  tabInLine(tl, yellowCursor, addedLine8, 0.2, ">", {scale: 0.04});

  // purple
  cursorBackspace(tl, purpleCursor, addedLine2, 0.2, 0);
  typeInLine(tl, purpleCursor, addedLine2, 0.1, ">");
  typeInLine(tl, purpleCursor, addedLine2, 0.1, ">");
  typeInLine(tl, purpleCursor, addedLine2, 0.3, ">");
  cursorBackspace(tl, purpleCursor, addedLine2, 0.2, ">");
  typeInLine(tl, purpleCursor, addedLine2, 0.1, ">");

  // cyan
  moveCursor(tl, cyanCursor, {y: "+=25", x: "+=10", duration: 0.5, ease: "power1.inOut"}, 0)
  typeInLine(tl, cyanCursor, line4, 0.3, ">");
  tabInLine(tl, cyanCursor, line4, 0.1, ">");
  typeInLine(tl, cyanCursor, line4, 0.1, ">");

  return tl;
}

function typingSecond9() {
  var tl = gsap.timeline();

  // yellow
  moveCursor(tl, yellowCursor, {y: "-=20", x: "-=7", duration: 0.5, ease: "power1.inOut"}, 0);
  cursorBackspace(tl, yellowCursor, line2, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, yellowCursor, line2, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, yellowCursor, line2, 0.1, ">", {scale: 0.04});
  typeInLine(tl, yellowCursor, line2, 0.1, ">", {scale: 0.04});
  typeInLine(tl, yellowCursor, line2, 0.1, ">", {scale: 0.04});

  // green
  typeInLine(tl, greenCursor, addedLine3, 0.1, 0, {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.2, ">", {scale: 0.08});
  cursorBackspace(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  cursorBackspace(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});
  typeInLine(tl, greenCursor, addedLine3, 0.1, ">", {scale: 0.08});

  // purple
  moveCursor(tl, purpleCursor, {x: "-=13", ease: "power1.inOut"}, 0.5, 0);
  cursorBackspace(tl, purpleCursor, addedLine2, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, purpleCursor, addedLine2, 0.1, ">", {scale: 0.04});
  cursorBackspace(tl, purpleCursor, addedLine2, 0.2, ">", {scale: 0.04});

  // cyan
  typeInLine(tl, cyanCursor, line4, 0.1, 0);
  typeInLine(tl, cyanCursor, line4, 0.1, ">");
  typeInLine(tl, cyanCursor, line4, 0.3, ">");
  typeInLine(tl, cyanCursor, line4, 0.1, ">");
  typeInLine(tl, cyanCursor, line4, 0.2, ">");
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");
  cursorBackspace(tl, cyanCursor, line4, 0.1, ">");

  return tl;
}

function animateOrbs () {
  var tl = gsap.timeline({repeat: "-1"});
  tl.to(sublimeOrb, {
      motionPath: {
              path: ".above-fold-animation .orbit",
              align: ".above-fold-animation .orbit",
              alignOrigin: [0.5, 0.5],
              start: 0,
              end: 1,
          },
      duration: 60,
      ease: "none"
  }, 0);
  tl.to(vimOrb, {
      motionPath: {
              path: ".above-fold-animation .orbit",
              align: ".above-fold-animation .orbit",
              alignOrigin: [0.5, 0.5],
              start: 0.25,
              end: 1.25,
          },
      duration: 60,
      ease: "none"
  }, 0);
  tl.to(intellijOrb, {
      motionPath: {
              path: ".above-fold-animation .orbit",
              align: ".above-fold-animation .orbit",
              alignOrigin: [0.5, 0.5],
              start: 0.5,
              end: 1.5,
          },
      duration: 60,
      ease: "none"
  }, 0);
  tl.to(vscodeOrb, {
      motionPath: {
              path: ".above-fold-animation .orbit",
              align: ".above-fold-animation .orbit",
              alignOrigin: [0.5, 0.5],
              start: 0.75,
              end: 1.75,
          },
      duration: 60,
      ease: "none"
  }, 0);
  return tl;
}
  function changeElement(tl, el, attrs, phaseNumber) {
    tl.to(el,
       Object.assign({}, { duration: 0.5 }, attrs), phaseNumber
    );
  }
  function changeManyElements(tl, elements, attrs, phaseNumber) {
    tl.to(elements.join(", "),
       Object.assign({}, { duration: 0.5 }, attrs), phaseNumber
    );
  }
  function reduceLineByOneCharacter(tl, line, phaseNumber, opts) {
    let scale = opts && opts.scale ? opts.scale : 0.08;
    tl.to(line, {scaleX: "-=" + scale, duration: 0, ease: "none"}, phaseNumber);
  }
  function increaseLineByOneCharacter(tl, line, phaseNumber, opts) {
    let scale = opts && opts.scale ? opts.scale : 0.08;
    tl.to(line, {scaleX: "+=" + scale, duration: 0, ease: "none"}, phaseNumber);
  }
  function cursorBackspace(tl, cursor, line, delay, phaseNumber, opts) {
    changeElement(tl, cursor, {x: "-=2", delay, duration: 0, ease: "none"}, phaseNumber);
    reduceLineByOneCharacter(tl, line, "<", opts);
  }
  function typeInLine(tl, cursor, line, delay, phaseNumber, opts) {
    changeElement(tl, cursor, {x: "+=2", delay, duration: 0, ease: "none"}, phaseNumber);
    increaseLineByOneCharacter(tl, line, "<", opts);
  }
  function tabInLine(tl, cursor, line, delay, phaseNumber, opts) {
    opts = opts || {};
    opts.scale = opts.scale ? opts.scale * 3 : 0.08 * 3;
    changeElement(tl, cursor, {x: "+=6", delay, duration: 0, ease: "none"}, phaseNumber);
    increaseLineByOneCharacter(tl, line, "<", opts);
  }
  function moveElementsDown(tl, elements, phaseNumber) {
    changeManyElements(tl, elements, {y: "+=5"}, phaseNumber);
  }
  function moveElementsUp(tl, elements, phaseNumber) {
    changeManyElements(tl, elements, {y: "-=5"}, phaseNumber);
  }

  function moveCursor(tl, cursor, attrs, phaseNumber) {
    if (cursor == yellowCursor) {
      tl.to(vimSatellite, {
          motionPath: {
                  path: vimOrbit,
                  align: vimOrbit,
                  alignOrigin: [0.5, 0.5],
                  start: 1,
                  end: 0,
              },
          duration: 0.5,
          ease: "power1.inOut"
      }, phaseNumber);
    } else if (cursor == purpleCursor) {
      tl.to(vscodeSatellite, {
          motionPath: {
                  path: vscodeOrbit,
                  align: vscodeOrbit,
                  alignOrigin: [0.4, 0.5],
                  start: 0.50,
                  end: 1.50,
              },
          duration: 0.5,
          ease: "power1.inOut"
      }, phaseNumber);
    } else if (cursor == cyanCursor) {
      tl.to(sublimeSatellite, {
          motionPath: {
                  path: sublimeOrbit,
                  align: sublimeOrbit,
                  alignOrigin: [0.4, 0.5],
                  start: 1,
                  end: 0,
              },
          duration: 0.5,
          ease: "power1.inOut"
      }, phaseNumber);
    } else if (cursor == greenCursor) {
      tl.to(intellijSatellite, {
          motionPath: {
                  path: intellijOrbit,
                  align: intellijOrbit,
                  alignOrigin: [0.4, 0.5],
                  start: 1,
                  end: 0,
              },
          duration: 0.5,
          ease: "power1.inOut"
      }, phaseNumber);
    }
    changeElement(tl, cursor, attrs, "<");
  }
}


</script>